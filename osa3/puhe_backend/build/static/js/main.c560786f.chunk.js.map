{"version":3,"sources":["components/Phonebook.js","components/Lisääjä.js","components/Ilmoitus.js","services/puhelin.js","App.js","index.js"],"names":["Numero","numero","poistaNumero","name","number","onClick","Numerot","numerot","poistaNumeroID","map","id","Phonebook","persons","filter","person","toUpperCase","includes","KenttäPäivitin","props","value","onChange","function","Lisääjä","onSubmit","handler","nimi","nimihandler","numerohandler","type","Ilmoitus","message","className","baseUrl","puhelin","getAll","axios","get","then","response","data","create","newObject","post","update","put","removeNumber","delete","HakuPäivitin","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","filterer","setFilterer","virheIlmoitus","asetaVirheIlmoitus","useEffect","phonebookService","muutos","target","tapahtuma","preventDefault","window","confirm","personObj","find","personObjAlt","setTimeout","catch","concat","error","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c560786f.chunk.js","sourcesContent":["/* eslint-disable react/prop-types */\r\nimport React from 'react'\r\n\r\n// yksittäisen numeron käsittelijä\r\nconst Numero = ({ numero, poistaNumero }) => {\r\n  return (\r\n    <div>\r\n      {numero.name} {numero.number}\r\n      <button onClick={poistaNumero}>Delete</button>\r\n    </div>\r\n  )\r\n}\r\n\r\n// kaikkien numeroiden käsittelijä\r\nconst Numerot = ({ numerot, poistaNumeroID }) => {\r\n  return (\r\n    <div>\r\n      {numerot.map(numero =>\r\n        <Numero\r\n          key={numero.name}\r\n          numero={numero}\r\n          poistaNumero={() => poistaNumeroID(numero.id, numero.name)}\r\n        />\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst Phonebook = ({ persons, filter, poistaNumeroID }) => {\r\n  return (\r\n    <>\r\n      <Numerot\r\n        numerot={persons.filter(person => person.name.toUpperCase().includes(filter.toUpperCase()))}\r\n        poistaNumeroID = {poistaNumeroID}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Phonebook","/* eslint-disable react/prop-types */\r\nimport React from 'react'\r\n\r\n\r\nconst KenttäPäivitin = (props) => {\r\n  return (\r\n    <div>\r\n      {props.name} <input\r\n        value = {props.value}\r\n        onChange = {props.function}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst Lisääjä = (props) => {\r\n  return (\r\n    <>\r\n      <form onSubmit={props.handler}>\r\n        <KenttäPäivitin\r\n          name='Name: '\r\n          value={props.nimi}\r\n          function={props.nimihandler}\r\n        />\r\n        <KenttäPäivitin\r\n          name='Number: '\r\n          value={props.numero}\r\n          function={props.numerohandler}\r\n        />\r\n        <div>\r\n          <button type=\"submit\">Add</button>\r\n        </div>\r\n      </form>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Lisääjä","/* eslint-disable react/prop-types */\r\nimport React from 'react'\r\n\r\nconst Ilmoitus = ({ message }) => {\r\n  //console.log(`ilmoitus: `,message)\r\n  if (message === null) {\r\n    return (\r\n      <div className=\"noerror\"></div>\r\n    )\r\n  }\r\n\r\n  if (message.includes('Success') ) {\r\n    return (\r\n      <div className=\"success\">\r\n        {message}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"error\">\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Ilmoitus","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst removeNumber = (id) => {\r\n  axios.delete(`${baseUrl}/${id}`)\r\n}\r\n\r\n//export default {\r\n//  getAll: getAll,\r\n//  create: create,\r\n//  update: update\r\n//}\r\n\r\nconst puhelin = {\r\n  getAll: getAll,\r\n  create: create,\r\n  update: update,\r\n  removeNumber: removeNumber\r\n}\r\n\r\nexport default puhelin","/* eslint-disable linebreak-style */\n/* eslint-disable react/prop-types */\nimport React, { useState, useEffect } from 'react'\n//import axios from 'axios'\nimport Phonebook from './components/Phonebook'\nimport Lisääjä from './components/Lisääjä'\nimport Ilmoitus from './components/Ilmoitus'\nimport phonebookService from './services/puhelin'\nimport './index.css'\n\nconst HakuPäivitin = (props) => {\n  return (\n    <>\n      <form>\n        {props.name} <input\n          value = {props.value}\n          onChange = {props.function}\n        />\n      </form>\n    </>\n  )\n}\n\n\nconst App = () => {\n  const [ persons, setPersons] = useState([\n    {\n      name: 'Arto Hellas',\n      number: '040-1231244'\n    }\n  ])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ filterer, setFilterer ] = useState('')\n  const [ virheIlmoitus, asetaVirheIlmoitus] = useState(null)\n\n  useEffect(() => {\n    //console.log('effect')\n    phonebookService\n      .getAll()\n      .then(response => {\n        //console.log('done')\n        //console.log(response.data)\n        setPersons(response)\n      })\n  }, [] )\n  //console.log('render', persons.length, 'persons')\n\n  // mikä käsittelee 'onSubmit' tapahtumaa\n  const tapahtumanKäsittelijä = (tapahtuma) => {\n    tapahtuma.preventDefault()\n    // console.log('Jottai tapahtusi', tapahtuma.target)\n\n    // tuplausta varten tarvitaan nimilista\n    const nimilista = persons.map(person => person.name)\n\n    // estetään tuplaus\n    if (nimilista.includes(newName)) {\n      //alert(`${newName} is already added to phonebook`)\n      //console.log('tuplaus')\n      if (window.confirm(`${newName} is already added to phonebook, replace the old number?`)) {\n        const personObj = persons.find(person => person.name === newName)\n        const personObjAlt = { ...personObj, number: newNumber }\n\n        phonebookService\n          .update(personObj.id, personObjAlt)\n          .then(response => {\n            setPersons(persons.map(person => person.id !== personObj.id ? person : response))\n            setNewName('')\n            setNewNumber('')\n            asetaVirheIlmoitus(\n              `Success: Number of ${response.name} has been changed`\n            )\n            setTimeout(() => {\n              asetaVirheIlmoitus(null)\n            }, 3000)\n          })\n          .catch(() => {\n            asetaVirheIlmoitus(\n              `Error: ${newName} had already been removed`\n            )\n            setTimeout(() => {\n              asetaVirheIlmoitus(null)\n            }, 3000)\n            setPersons(persons.filter(person => person.name !== newName))\n            setNewName('')\n            setNewNumber('')\n          })\n      }\n    } else {\n      // tehdään uusi henkilö/numero 'olio'\n      const personObj = {\n        name : newName,\n        number : newNumber,\n      }\n      phonebookService\n        .create(personObj)\n        .then(response => {\n          //console.log(response)\n          setPersons(persons.concat(response))\n          setNewName('')\n          setNewNumber('')\n          asetaVirheIlmoitus(\n            `Success: ${personObj.name} has been added`\n          )\n          setTimeout(() => {\n            asetaVirheIlmoitus(null)\n          }, 3000)\n        })\n        .catch(error => {\n          //console.log(error.response.data.error)\n          asetaVirheIlmoitus(\n            error.response.data.error\n          )\n          setTimeout(() => {\n            asetaVirheIlmoitus(null)\n          }, 3000)\n        })\n      //setPersons(persons.concat(personObj))\n    }\n  }\n\n  const numeronPoistaja = (id, nimi) => {\n    //console.log(`POISTAJA: ${id}`)\n    if (window.confirm(`Delete ${nimi}?`)) {\n      phonebookService\n        .removeNumber(id)\n      //console.log(persons)\n      //console.log(persons.filter(person => person.id !== id))\n      setPersons(persons.filter(person => person.id !== id))\n      asetaVirheIlmoitus(\n        `Success: ${nimi} has been removed`\n      )\n      setTimeout(() => {\n        asetaVirheIlmoitus(null)\n      }, 3000)\n    }\n  }\n\n  // mikä käsittelee 'onChange' muutosta\n  const muutoksenKäsittelijäNimi = (muutos) => {\n    //console.log(tapahtuma.target.value)\n    setNewName(muutos.target.value)\n  }\n\n  const muutoksenKäsittelijäNumero = (muutos) => {\n    //console.log(tapahtuma.target.value)\n    setNewNumber(muutos.target.value)\n  }\n\n  const muutoksenKäsittelijäHaku = (muutos) => {\n    setFilterer(muutos.target.value)\n  }\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <Ilmoitus message={virheIlmoitus} />\n      <h2>Search by name</h2>\n      <HakuPäivitin\n        name='Contains: '\n        value={filterer}\n        function={muutoksenKäsittelijäHaku}\n      />\n      <h2>Add or update information</h2>\n      <Lisääjä\n        handler={tapahtumanKäsittelijä}\n        nimi={newName}\n        numero={newNumber}\n        nimihandler={muutoksenKäsittelijäNimi}\n        numerohandler={muutoksenKäsittelijäNumero}\n      />\n      <h2>Numbers</h2>\n      <Phonebook\n        persons={persons}\n        filter={filterer}\n        poistaNumeroID = {numeronPoistaja}\n      />\n    </div>\n  )\n}\n\nexport default App","/* eslint-disable linebreak-style */\n/* eslint-disable react/react-in-jsx-scope */\n\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}